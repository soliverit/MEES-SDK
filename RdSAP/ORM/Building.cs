// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;
using System.Collections.Generic;

#pragma warning disable 1573, 1591
#nullable enable

namespace MeesSDK
{
	[Table("buildings")]
	public class Building
	{
		[Column("id"                       , IsPrimaryKey = true, IsIdentity = true, SkipOnInsert = true, SkipOnUpdate = true)] public int      Id                      { get; set; } // integer
		[Column("building_reference_number"                                                                                  )] public long     BuildingReferenceNumber { get; set; } // bigint
		[Column("nondomestic"                                                                                                )] public bool?    Nondomestic             { get; set; } // boolean
		[Column("address1"                                                                                                   )] public string?  Address1                { get; set; } // character varying(256)
		[Column("address2"                                                                                                   )] public string?  Address2                { get; set; } // character varying(256)
		[Column("address3"                                                                                                   )] public string?  Address3                { get; set; } // character varying(256)
		[Column("postcode_id"                                                                                                )] public int?     PostcodeId              { get; set; } // integer
		[Column("both_epc_types"                                                                                             )] public bool     BothEpcTypes            { get; set; } // boolean
		[Column("property_type_id"                                                                                           )] public int?     PropertyTypeId          { get; set; } // integer
		[Column("built_form_id"                                                                                              )] public int?     BuiltFormId             { get; set; } // integer
		[Column("area"                                                                                                       )] public decimal? Area                    { get; set; } // numeric(9,4)

		#region Associations
		/// <summary>
		/// depc_ml_features_building_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(DepcMlFeature.BuildingId))]
		public IEnumerable<DepcMlFeature> DepcMlFeatures { get; set; } = null!;

		/// <summary>
		/// depcs_building_id_fkey backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Depc.BuildingId))]
		public IEnumerable<Depc> Depcs { get; set; } = null!;

		/// <summary>
		/// fk_buildings_built_form
		/// </summary>
		[Association(ThisKey = nameof(BuiltFormId), OtherKey = nameof(MeesSDK.BuiltForm.Id))]
		public BuiltForm? BuiltForm { get; set; }

		/// <summary>
		/// fk_buildings_property_type
		/// </summary>
		[Association(ThisKey = nameof(PropertyTypeId), OtherKey = nameof(MeesSDK.PropertyType.Id))]
		public PropertyType? PropertyType { get; set; }

		/// <summary>
		/// fk_epc_building_id backreference
		/// </summary>
		[Association(ThisKey = nameof(Id), OtherKey = nameof(Epc.BuildingId))]
		public IEnumerable<Epc> Epcs { get; set; } = null!;
		#endregion
	}
}
